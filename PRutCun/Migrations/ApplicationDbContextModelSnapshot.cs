// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRutCun.Context;

namespace PRutCun.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PRutCun.Models.Calle", b =>
                {
                    b.Property<int>("PkCalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreCalle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCalle");

                    b.ToTable("Calle");
                });

            modelBuilder.Entity("PRutCun.Models.CalleTransitada", b =>
                {
                    b.Property<int>("FkCalle")
                        .HasColumnType("int");

                    b.Property<int>("FkTransporte")
                        .HasColumnType("int");

                    b.HasKey("FkCalle", "FkTransporte");

                    b.HasIndex("FkTransporte");

                    b.ToTable("CalleTransitada");
                });

            modelBuilder.Entity("PRutCun.Models.Mapas", b =>
                {
                    b.Property<int>("PkMapas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Fktransportes")
                        .HasColumnType("int");

                    b.Property<string>("MapaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkMapas");

                    b.HasIndex("Fktransportes");

                    b.ToTable("Mapas");
                });

            modelBuilder.Entity("PRutCun.Models.PuntoInteres", b =>
                {
                    b.Property<int>("PkPunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkPunto");

                    b.ToTable("PuntoInteres");
                });

            modelBuilder.Entity("PRutCun.Models.PuntoTransitado", b =>
                {
                    b.Property<int>("FkPunto")
                        .HasColumnType("int");

                    b.Property<int>("FkTransporte")
                        .HasColumnType("int");

                    b.HasKey("FkPunto", "FkTransporte");

                    b.HasIndex("FkTransporte");

                    b.ToTable("PuntoTransitado");
                });

            modelBuilder.Entity("PRutCun.Models.Roles", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PRutCun.Models.TipoTransporte", b =>
                {
                    b.Property<int>("PkTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkTipo");

                    b.ToTable("TipoTrasporte");
                });

            modelBuilder.Entity("PRutCun.Models.Transporte", b =>
                {
                    b.Property<int>("PkTransporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("FkTipo")
                        .HasColumnType("int");

                    b.Property<string>("HoraFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkTransporte");

                    b.HasIndex("FkTipo");

                    b.ToTable("Trasporte");
                });

            modelBuilder.Entity("PRutCun.Models.Usuario", b =>
                {
                    b.Property<int>("PkUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolPkRol")
                        .HasColumnType("int");

                    b.HasKey("PkUser");

                    b.HasIndex("RolPkRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PRutCun.Models.CalleTransitada", b =>
                {
                    b.HasOne("PRutCun.Models.Calle", "Calle")
                        .WithMany()
                        .HasForeignKey("FkCalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRutCun.Models.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("FkTransporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calle");

                    b.Navigation("Transporte");
                });

            modelBuilder.Entity("PRutCun.Models.Mapas", b =>
                {
                    b.HasOne("PRutCun.Models.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("Fktransportes");

                    b.Navigation("Transporte");
                });

            modelBuilder.Entity("PRutCun.Models.PuntoTransitado", b =>
                {
                    b.HasOne("PRutCun.Models.PuntoInteres", "Punto")
                        .WithMany()
                        .HasForeignKey("FkPunto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRutCun.Models.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("FkTransporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Punto");

                    b.Navigation("Transporte");
                });

            modelBuilder.Entity("PRutCun.Models.Transporte", b =>
                {
                    b.HasOne("PRutCun.Models.TipoTransporte", "Tipo")
                        .WithMany()
                        .HasForeignKey("FkTipo");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("PRutCun.Models.Usuario", b =>
                {
                    b.HasOne("PRutCun.Models.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("RolPkRol");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
